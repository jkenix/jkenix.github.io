{"version":3,"file":"npm.framer-motion.js","mappings":"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","sources":["webpack:///./node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack:///./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack:///./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack:///./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack:///./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack:///./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack:///./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack:///./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack:///./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack:///./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack:///./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack:///./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack:///./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack:///./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/array.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack:///./node_modules/framer-motion/dist/es/value/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack:///./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/back.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack:///./node_modules/framer-motion/dist/es/debug/record.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.0.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            elapsed: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.0.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.0.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","current","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useState","useCallback","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","inherit","getCurrentTreeVariants","useCreateMotionContext","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useHTMLProps","htmlProps","assign","useInitialMotionValues","transformValues","useStyle","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","root","rootMargin","amount","once","threshold","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","observeIntersection","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","notify","c","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","interpolate","input","isClamp","ease","mixer","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","remaining","offsetProgress","fillOffset","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","stiffness","damping","mass","isResolvedFromDuration","springOptions","derived","bounce","envelope","derivative","exponentialDecay","exp","d","f","initialGuess","result","approximateRoot","findSpring","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","animateValue","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isForwardPlayback","animator","hasRepeatDelayElapsed","reverseElapsed","currentTime","sample","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","valueName","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","createAcceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","makeTargetAnimatable","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","setTarget","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","createAnimationState","resolvedDefinition","animateVisualElement","animateList","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","fallback","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","parseDomVariant","resolveCSSVariables","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","checkAndConvertChangedValueTypes","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","warning","invariant","isBrowser","any","useConstant","useIsomorphicLayoutEffect","useLayoutEffect"],"sourceRoot":""}